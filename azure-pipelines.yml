trigger:
  branches:
    include:
      - master
variables:
  - group: Mobile - Dev
pool:
  vmImage: 'ubuntu-latest'
steps:
  - checkout: self
    persistCredentials: true
    clean: true
  - task: NodeTool@0
    displayName: 'Install Node'
    inputs:
      versionSpec: '18.15.0' # you can use your desired version here
  - script: npm install --force
    displayName: Install Dependencies
  
  - script: |
      # Disable autocommit on version bump 
      yarn config set version-sign-git-tag false
      yarn config set version-git-tag false
      yarn config set version-commit-hooks false
      # Checkout branch where the build is triggered
      git checkout $(Build.SourceBranchName)
      # Extract existing version of package.json
      oldVer=$(jq -r ".version" package.json)
      # Bump version
      yarn version --patch
      # Add bumped version to staging
      git add *
      # Extract new version of package.json
      newVer=$(jq -r ".version" package.json)
      # Set environment variables
      echo "##vso[task.setvariable variable=OLD_VERSION]$oldVer"
      echo "##vso[task.setvariable variable=NEW_VERSION]$newVer"
    displayName: 'Bump version and set variables'  
  - task: CmdLine@2
    displayName: 'Apply google services'
    inputs:
      script: 'cat google-services_Dev.json > google-services.json'
      workingDirectory: 'android/app'
    condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/develop'), eq(variables['Build.SourceBranch'], 'refs/heads/develop-legacy'))
  - task: CmdLine@2
    displayName: 'Apply google services'
    inputs:
      script: 'cat google-services_V5.json > google-services.json'
      workingDirectory: 'android/app'
    condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceBranch'], 'refs/heads/master-legacy'))
  - task: Gradle@3
    displayName: 'Build APK'
    inputs:
      gradleWrapperFile: 'android/gradlew'
      workingDirectory: 'android/'
      options: '-PversionName=5.0.0 -PversionCode=$(Build.BuildId) -PapplicationId=com.warhammerapp.dev'
      tasks: 'assembleDev'
      publishJUnitResults: false
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.11'
      gradleOptions: '-Xmx3072m'
      sonarQubeRunAnalysis: false
    condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/develop'), eq(variables['Build.SourceBranch'], 'refs/heads/develop-legacy'))
  - task: Gradle@3
    displayName: 'Build APK'
    inputs:
      gradleWrapperFile: 'android/gradlew'
      workingDirectory: 'android/'
      options: '-PversionName=5.0.0 -PversionCode=$(Build.BuildId) -PapplicationId=com.warhammerapp.v5'
      tasks: 'assembleInt'
      publishJUnitResults: false
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.11'
      gradleOptions: '-Xmx3072m'
      sonarQubeRunAnalysis: false
    condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceBranch'], 'refs/heads/master-legacy'))
    
  - task: AndroidSigning@3
    displayName: 'Sign APK'
    inputs:
      apkFiles: 'android/app/build/outputs/apk/dev/release/*.apk'
      apksignerKeystoreFile: 'debug.keystore'
      apksignerKeystorePassword: '$(AndroidKeyStorePassword)'
      apksignerKeystoreAlias: '$(AndroidKeyAlias)'
      apksignerKeyPassword: '$(AndroidKeyAliasPassword)'
      zipalign: true
    condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/develop'), eq(variables['Build.SourceBranch'], 'refs/heads/develop-legacy'))
  - task: AndroidSigning@3
    displayName: 'Sign APK'
    inputs:
      apkFiles: 'android/app/build/outputs/apk/int/release/*.apk'
      apksignerKeystoreFile: 'debug.keystore'
      apksignerKeystorePassword: '$(AndroidKeyStorePassword)'
      apksignerKeystoreAlias: '$(AndroidKeyAlias)'
      apksignerKeyPassword: '$(AndroidKeyAliasPassword)'
      zipalign: true
    condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceBranch'], 'refs/heads/master-legacy'))
  - task: PublishBuildArtifacts@1
    displayName: 'Publish APK to artifacts'
    inputs:
      PathtoPublish: 'android/app/build/outputs/apk/dev/release'
      ArtifactName: 'android'
      publishLocation: 'Container'
    condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/develop'), eq(variables['Build.SourceBranch'], 'refs/heads/develop-legacy'))
  - task: PublishBuildArtifacts@1
    displayName: 'Publish APK to artifacts'
    inputs:
      PathtoPublish: 'android/app/build/outputs/apk/int/release'
      ArtifactName: 'android'
      publishLocation: 'Container'
    condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceBranch'], 'refs/heads/master-legacy'))
  - script: |
      tag="mobile_$(NEW_VERSION)"
      echo "New tag $tag"
      git config user.email "efsdevops@efs.sante.fr"
      git config user.name "Devops EFS"
      git add *
      git commit -m "Update version from $(OLD_VERSION) to $(NEW_VERSION)"
      git tag $tag
      git pull --rebase origin $(Build.SourceBranchName)
      git push origin $(Build.SourceBranchName)
      git push --tags
    displayName: Bump commit